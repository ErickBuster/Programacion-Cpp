Busqueda binaria:
    consiste en localizar un dato especifico dentro de una lista
    o arreglo ordenado de n elementos. El algoritmo de busqueda binaria 
    se puede describir recursivamente aplicando la tecnica "divide y venceras"
    Supongase que se tiene un arreglo ordenado a[] con un limite inferior y 
    un limite superior. dado un dato (valor a buscar) la busqueda comienza 
    en la posicion central de la lista.

    Si se encuentra el dato que se esta buscando se ha alcanzado la condicion
    de terminacion que permite detener la busqueda y devolver el indice central
    si no se produce la coincidencia dado que la lista esta ordenada, se central
    la busqueda en la "sublista inferior"(a la izquierda de la posicion central)
    o en la "sublista superior"(a la derecha de la posicion central); el problema
    de la busqueda se ha dividido justamente en la mitad. Cada vez el tamaño
    de la secuencia donde buscar se reduce a la mitad, asi hasta que se encuentra
    el elemento, o bien la lista resultante este vacia.

    Si dato < a[mitad], el valor buscado solo puede estar en la mitad izquieda de a[]
    con elementos en el rango, inferior a mitad - 1.

    So dato > a[mitad], el valor buscado solo puede estar en la mitad superior de a[]
    con elementos en el rango mitad+1 a superior.
    La busqueda continua en sublistas mas y mas pequeñas, exactamente la
    mitad, con dos llamadas recursivas, una se correnponde con la sublista
    inferior y la otra con la sublista superior. El algoritmo termina, o con 
    exito (aparace el dato buscado) o sin exito (no aparece el dato buscado),
    situacion que ocurrira cuando el limite superior de la lista sea mas 
    pequeño que el limite inferior.
    La condicion inferior > superior es la condicion de salida o terminacion
    sin exito y el algoritmo devuelve el indice -1.

algoritmo recursivo de la busqueda binaria:
    int busquedaBinaria(int a[], int dato, int inferior, int superior){
        int mitad;
        if(inferior > superior) // no encontrado
            return -1;
        else{
            mitad = (inferior + superior)/2;
            if(dato == a[mitad]){   //Caso base
                return mitad;
            }else if(dato > a[mitad]){  //Caso recursivo
                return busquedaBinaria(a, dato, mitad+1, superior);
            }else{
                return busquedaBinaria(a, dato, inferior, mitad-1);
            }
        }
    }