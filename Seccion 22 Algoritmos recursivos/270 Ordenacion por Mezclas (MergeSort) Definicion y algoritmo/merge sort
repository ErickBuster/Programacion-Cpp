Ordenacion por mezclas - MergeSort
    la idea basica de este algoritmo de oridenacion es la mezcla(merge) de 
    las listas ya ordenadas. El algoritmo sigue la tipica estrategia 
    "divide y venceras". Cada paso se basa en dividir el problema de ordenaar
    n elementos en dos subproblemas mas pequeños , de tamaño mitad, de tal
    forma que una vez ordenada cada mitad se mezclan para asi resolver
    el problema original.

    ex: Seguir la estrategia del algoritmo MergeSort para ordenar la 
    siguiente listas
        9 1 3 5 10 4 6
        indice inf = 0
        indice sup = 6
        mitad = (inf + sup) / 2 = 3
        9 1 3 5             10 4 6
        9 1     3 5         10 4    6
        9   1   3   5       10   4   6
        dividiendo todos a la mitad
        y cuando llegue a la base = 1 entonces hacemos la mezcla 
        1 9     3 5         4 10    6
        1 3 5 9             4 6 10
        1 3 4 5 6 9 10 
        y terminamos ordenandolo
    algoritmo MergeSort
        Este algoritmo de oridenacion se diseña facilmente con ayuda de 
        las llamdas recursivas para dividir las listas en dos mitades; 
        posteriormente se invoca a la funcion de mezcla de dos listas 
        ordenadas. La delimitacion de dos listas se hace con tres indices:
        primero, central y ultimo. Asi si se tiene una lista de 10 elementos los
        valores de los indices
        primero = 0
        ultimo = 9
        central = (primero + ultimo) / 2 = 4
        la primera sublista comprende los elementos a_0 ... a_4 y la segunda 
        los elementos a_4+1 --- a_9
        void MergeSort(int a[], int primero, int ultimo){
            int central;
            if(primero < ultimo){
                central = (primero+ultimo)/2;
                MergeSort(a, primero, central); // Ordena primera mitad de la lista
                MergeSort(a, central+1, ultimo); //Ordena segunda mitad de la lista 
                mezcla(a, primero, central, ultimo)//Fusiona las dos sublista ordenadas, delimitadas por los extremos
            }
        }